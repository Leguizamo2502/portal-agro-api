// <auto-generated />
using System;
using Entity.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251030024317_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.PasswordResetCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetCodes");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Calle 1 # 1-1",
                            CityId = 33,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona1",
                            Identification = "000000000",
                            IsDeleted = false,
                            LastName = "Persona1",
                            PhoneNumber = "3000000000"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Carrera 10 # 20-15",
                            CityId = 34,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona2",
                            Identification = "000000001",
                            IsDeleted = false,
                            LastName = "Persona2",
                            PhoneNumber = "3000000001"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Avenida 3 # 5-30",
                            CityId = 35,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Persona3",
                            Identification = "000000002",
                            IsDeleted = false,
                            LastName = "Persona3",
                            PhoneNumber = "3000000003"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Token.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("ReplacedByTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            IsDeleted = false,
                            Password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@example.com",
                            IsDeleted = false,
                            Password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "producer@example.com",
                            IsDeleted = false,
                            Password = "5cc500a2237915f8c6d906d4ea5c9632a3e0a6220d7cdffc620fe36cbbb92316",
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Favorites.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique();

                    b.ToTable("Favorites", (string)null);
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Acevedo"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Agrado"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Aipe"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Algeciras"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Altamira"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Baraya"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Campoalegre"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Elías"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Garzón"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Gigante"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Guadalupe"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Hobo"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Iquira"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Isnos"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "La Argentina"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "La Plata"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Nátaga"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Neiva"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Oporapa"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Paicol"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Palermo"
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Palestina"
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Pital"
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Pitalito"
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Rivera"
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Saladoblanco"
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "San Agustín"
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Santa María"
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Suaza"
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tarqui"
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tello"
                        },
                        new
                        {
                            Id = 33,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Teruel"
                        },
                        new
                        {
                            Id = 34,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Tesalia"
                        },
                        new
                        {
                            Id = 35,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Timaná"
                        },
                        new
                        {
                            Id = 36,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Villavieja"
                        },
                        new
                        {
                            Id = 37,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 17,
                            IsDeleted = false,
                            Name = "Yaguará"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Amazonas"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Antioquia"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Arauca"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Atlántico"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Bolívar"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Boyacá"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Caldas"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Caquetá"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Casanare"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cauca"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cesar"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Chocó"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Córdoba"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cundinamarca"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guainía"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Guaviare"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Huila"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "La Guajira"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Magdalena"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Meta"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Nariño"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Norte de Santander"
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Putumayo"
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Quindío"
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Risaralda"
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "San Andrés y Providencia"
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Santander"
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Sucre"
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tolima"
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Valle del Cauca"
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Vaupés"
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Vichada"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdditionalNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("AutoCloseAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentImageUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("PaymentSubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentUploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProducerDecisionAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProducerDecisionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerIdSnapshot")
                        .HasColumnType("int");

                    b.Property<string>("ProducerNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductNameSnapshot")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuantityRequested")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPriceSnapshot")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UserConfirmEnabledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserReceivedAnswer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UserReceivedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.HasIndex("Status", "AutoCloseAt", "Active", "IsDeleted");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Orders.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hectares")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Farms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca el Jardin",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca el Mirador",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca los Alpes",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca los Lulos",
                            ProducerId = 1
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Altitude = 1600.0,
                            CityId = 33,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hectares = 4.0,
                            IsDeleted = false,
                            Latitude = 1200.0,
                            Longitude = 600.0,
                            Name = "Finca los Primos",
                            ProducerId = 2
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farms.FarmImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("FarmImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 1,
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754487968/defaultFarm_xkify3.jpg",
                            IsDeleted = false,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 2,
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754487968/defaultFarm_xkify3.jpg",
                            IsDeleted = false,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 3,
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754487968/defaultFarm_xkify3.jpg",
                            IsDeleted = false,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 4,
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754487968/defaultFarm_xkify3.jpg",
                            IsDeleted = false,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FarmId = 5,
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754487968/defaultFarm_xkify3.jpg",
                            IsDeleted = false,
                            PublicId = "default"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QrUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "M3QPD6Y8ZR",
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hola vendo papa",
                            IsDeleted = false,
                            QrUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1756782308/qr_png_e6xgom.png",
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Code = "AB7KX92TQF",
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hola vendo papa modo admin",
                            IsDeleted = false,
                            QrUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1756782308/qr_png_e6xgom.png",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.ProducerSocialLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Network")
                        .HasColumnType("int");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId", "Network")
                        .IsUnique();

                    b.ToTable("ProducerSocialLinks", (string)null);
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.ProductFarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("ProductId", "FarmId")
                        .IsUnique()
                        .HasFilter("[IsDeleted] = 0");

                    b.ToTable("ProductFarms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 3,
                            IsDeleted = false,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 3,
                            IsDeleted = false,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 4,
                            IsDeleted = false,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 4,
                            IsDeleted = false,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 3,
                            IsDeleted = false,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 4,
                            IsDeleted = false,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 3,
                            IsDeleted = false,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 4,
                            IsDeleted = false,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 2,
                            IsDeleted = false,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 4,
                            IsDeleted = false,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 3,
                            IsDeleted = false,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FarmId = 1,
                            IsDeleted = false,
                            ProductId = 22
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Frutas"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cítricos",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tropicales",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Exóticas",
                            ParentCategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Hortalizas"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Tubérculos",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Granos"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Café",
                            ParentCategoryId = 7
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Cacao",
                            ParentCategoryId = 7
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<string>("Production")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShippingIncluded")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProducerId", "Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cafe con el mejor sabor del campo",
                            IsDeleted = false,
                            Name = "Cafe el sabor",
                            Price = 30000m,
                            ProducerId = 1,
                            Production = "300 lb cada tres meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 250,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cultivado sin químicos, sabor intenso",
                            IsDeleted = false,
                            Name = "Café Orgánico Premium",
                            Price = 35000m,
                            ProducerId = 1,
                            Production = "200 lb por trimestre",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 180,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tueste medio con notas frutales",
                            IsDeleted = false,
                            Name = "Café Tostado Suave",
                            Price = 32000m,
                            ProducerId = 1,
                            Production = "150 lb cada mes",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 120,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Grano seleccionado de alta montaña",
                            IsDeleted = false,
                            Name = "Café Grano Oscuro",
                            Price = 34000m,
                            ProducerId = 1,
                            Production = "180 lb bimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 210,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cosechado a mano en clima fresco",
                            IsDeleted = false,
                            Name = "Café El Mirador",
                            Price = 30000m,
                            ProducerId = 1,
                            Production = "220 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 190,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sabor balanceado, aroma suave",
                            IsDeleted = false,
                            Name = "Café Clásico de los Andes",
                            Price = 31000m,
                            ProducerId = 1,
                            Production = "250 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 170,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mezcla selecta de granos",
                            IsDeleted = false,
                            Name = "Café Supremo",
                            Price = 36000m,
                            ProducerId = 1,
                            Production = "300 lb cada 2 meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 260,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cultivo en altitudes extremas",
                            IsDeleted = false,
                            Name = "Café los Alpes",
                            Price = 37000m,
                            ProducerId = 1,
                            Production = "280 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 250,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mezcla con notas cítricas",
                            IsDeleted = false,
                            Name = "Café Lulo Blend",
                            Price = 33000m,
                            ProducerId = 1,
                            Production = "230 lb bimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 200,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tueste natural, suave al paladar",
                            IsDeleted = false,
                            Name = "Café del Bosque",
                            Price = 30000m,
                            ProducerId = 1,
                            Production = "180 lb mensual",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 160,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Grano seleccionado manualmente",
                            IsDeleted = false,
                            Name = "Café Reserva Especial",
                            Price = 38000m,
                            ProducerId = 1,
                            Production = "150 lb cada tres meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 130,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cultivo bajo sombra natural",
                            IsDeleted = false,
                            Name = "Café Sierra Verde",
                            Price = 31000m,
                            ProducerId = 1,
                            Production = "200 lb cada 2 meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 140,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Grano joven de excelente aroma",
                            IsDeleted = false,
                            Name = "Café del Amanecer",
                            Price = 30500m,
                            ProducerId = 1,
                            Production = "160 lb mensual",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 150,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tueste lento en horno de barro",
                            IsDeleted = false,
                            Name = "Café Tostado Artesanal",
                            Price = 34000m,
                            ProducerId = 1,
                            Production = "190 lb bimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 175,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CategoryId = 9,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mezcla suave con aroma a chocolate",
                            IsDeleted = false,
                            Name = "Café con Cacao",
                            Price = 33000m,
                            ProducerId = 1,
                            Production = "210 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 160,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sabor intenso con notas amaderadas",
                            IsDeleted = false,
                            Name = "Café Gourmet del Campo",
                            Price = 37000m,
                            ProducerId = 1,
                            Production = "280 lb bimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 210,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Proceso húmedo tradicional",
                            IsDeleted = false,
                            Name = "Café Lavado",
                            Price = 32000m,
                            ProducerId = 1,
                            Production = "190 lb mensual",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 160,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Secado al sol directamente",
                            IsDeleted = false,
                            Name = "Café Natural",
                            Price = 31000m,
                            ProducerId = 1,
                            Production = "220 lb cada 3 meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 180,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Granos cultivados a 1600msnm",
                            IsDeleted = false,
                            Name = "Café de Altura",
                            Price = 35000m,
                            ProducerId = 1,
                            Production = "270 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 200,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Versión fuerte ideal para espresso",
                            IsDeleted = false,
                            Name = "Café Lulo Espresso",
                            Price = 35500m,
                            ProducerId = 1,
                            Production = "160 lb mensual",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 190,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CategoryId = 9,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Mezcla gourmet café y cacao",
                            IsDeleted = false,
                            Name = "Café Cacao Fusion",
                            Price = 39000m,
                            ProducerId = 1,
                            Production = "240 lb trimestral",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 150,
                            Unit = "lb"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CategoryId = 8,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Selección premium para exportación",
                            IsDeleted = false,
                            Name = "Café de Exportación",
                            Price = 40000m,
                            ProducerId = 1,
                            Production = "300 lb cada 2 meses",
                            ShippingIncluded = false,
                            Status = true,
                            Stock = 220,
                            Unit = "lb"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 1,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 2,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 3,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 4,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 5,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 6,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 7,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 8,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 9,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 10,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 11,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 12,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 13,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 14,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 15,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 16,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 17,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 18,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 19,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 20,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 21,
                            PublicId = "default"
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileName = "Imagen_Default.jpg",
                            ImageUrl = "https://res.cloudinary.com/djj163sc9/image/upload/v1754488119/REVERDERI-200-G_dj1poi.png",
                            IsDeleted = false,
                            ProductId = 22,
                            PublicId = "default"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de formularios",
                            IsDeleted = false,
                            Name = "Formularios",
                            Url = "/account/security/form"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de usuarios",
                            IsDeleted = false,
                            Name = "Usuarios",
                            Url = "/account/security/user"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de roles",
                            IsDeleted = false,
                            Name = "Roles",
                            Url = "/account/security/rol"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de módulos",
                            IsDeleted = false,
                            Name = "Módulos",
                            Url = "/account/security/module"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Asignación rol-usuario",
                            IsDeleted = false,
                            Name = "Rol-Usuario",
                            Url = "/account/security/rolUser"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Asignación módulo-form",
                            IsDeleted = false,
                            Name = "Módulo-Formulario",
                            Url = "/account/security/formModule"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Asignación R-F-P",
                            IsDeleted = false,
                            Name = "Rol-Formulario-Permiso",
                            Url = "/account/security/rolFormPermission"
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Catálogo de permisos",
                            IsDeleted = false,
                            Name = "Permisos",
                            Url = "/account/security/permission"
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Puerta de acceso a la gestión del productor",
                            IsDeleted = false,
                            Name = "Inicio productor",
                            Url = "/account/producer"
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Resumen",
                            IsDeleted = false,
                            Name = "Resumen Productor",
                            Url = "/account/producer/summary"
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de productos",
                            IsDeleted = false,
                            Name = "Productos",
                            Url = "/account/producer/management/product"
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión de fincas",
                            IsDeleted = false,
                            Name = "Fincas",
                            Url = "/account/producer/management/farm"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.FormModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("ModuleId");

                    b.ToTable("FormModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 2,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 3,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 4,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 5,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 6,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 7,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 8,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 9,
                            IsDeleted = false,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 10,
                            IsDeleted = false,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 11,
                            IsDeleted = false,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 12,
                            IsDeleted = false,
                            ModuleId = 3
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Administración de seguridad",
                            IsDeleted = false,
                            Name = "Seguridad"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Parámetros del sistema",
                            IsDeleted = false,
                            Name = "Parámetros"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gestión del productor",
                            IsDeleted = false,
                            Name = "Productor"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Puede ver",
                            IsDeleted = false,
                            Name = "leer"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Puede crear",
                            IsDeleted = false,
                            Name = "crear"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Puede editar",
                            IsDeleted = false,
                            Name = "actualizar"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Puede eliminar",
                            IsDeleted = false,
                            Name = "eliminar"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos administrativos",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos de usuario",
                            IsDeleted = false,
                            Name = "Consumer"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rol con permisos de Productor",
                            IsDeleted = false,
                            Name = "Producer"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolFormPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RolId");

                    b.ToTable("RolFormPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 3,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 3,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 3,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 3,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 4,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 4,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 4,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 4,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 5,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 5,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 5,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 5,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 6,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 6,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 6,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 6,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 7,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 7,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 7,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 7,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 8,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 8,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 8,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 8,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 33,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 9,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 34,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 9,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 35,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 9,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 36,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 9,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 37,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 10,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 38,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 10,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 39,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 10,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 40,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 10,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 41,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 11,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 42,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 11,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 43,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 11,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 44,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 11,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        },
                        new
                        {
                            Id = 45,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 12,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 46,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 12,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 47,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 12,
                            IsDeleted = false,
                            PermissionId = 3,
                            RolId = 1
                        },
                        new
                        {
                            Id = 48,
                            Active = true,
                            CreateAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FormId = 12,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 1
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("RolUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreateAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Auth.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Entity.Domain.Models.Implements.Auth.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Favorites.Favorite", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.Department", "Department")
                        .WithMany("Cities")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Orders.Order", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Orders.Review", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Location.City", "City")
                        .WithMany("Farms")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Producer", "Producer")
                        .WithMany("Farms")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farms.FarmImage", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Farm", "Farm")
                        .WithMany("FarmImages")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithOne("Producer")
                        .HasForeignKey("Entity.Domain.Models.Implements.Producers.Producer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.ProducerSocialLink", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Producer", "Producer")
                        .WithMany("SocialLinks")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.ProductFarm", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Farm", "Farm")
                        .WithMany("ProductFarms")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Product", "Product")
                        .WithMany("ProductFarms")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Category", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Product", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Producers.Producer", "Producer")
                        .WithMany("Products")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.ProductImage", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Producers.Products.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.FormModule", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Form", "Form")
                        .WithMany("FormModules")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Module", "Module")
                        .WithMany("FormModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Form", "Form")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Permission", "Permission")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Security.Rol", "Rol")
                        .WithMany("RolFormPermissions")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.RolUser", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Security.Rol", "Rol")
                        .WithMany("RolUsers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Auth.User", "User")
                        .WithMany("RolUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.Person", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Auth.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");

                    b.Navigation("Producer");

                    b.Navigation("Reviews");

                    b.Navigation("RolUsers");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.City", b =>
                {
                    b.Navigation("Farms");

                    b.Navigation("People");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Location.Department", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Farm", b =>
                {
                    b.Navigation("FarmImages");

                    b.Navigation("ProductFarms");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Producer", b =>
                {
                    b.Navigation("Farms");

                    b.Navigation("Products");

                    b.Navigation("SocialLinks");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Producers.Products.Product", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");

                    b.Navigation("ProductFarms");

                    b.Navigation("ProductImages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Module", b =>
                {
                    b.Navigation("FormModules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Permission", b =>
                {
                    b.Navigation("RolFormPermissions");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Security.Rol", b =>
                {
                    b.Navigation("RolFormPermissions");

                    b.Navigation("RolUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
